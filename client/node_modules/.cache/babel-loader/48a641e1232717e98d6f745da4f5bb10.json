{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\h_eno\\\\Desktop\\\\clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/h_eno/Desktop/clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotToMap","updateCollections","CollectionPage","CollectionOverview","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACD,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD0B;AAAA,SAKlCC,uBALkC,GAKR,IALQ;AAAA;;AAOlCC,EAAAA,iBAAiB,GAAG;AAAA,UACRX,iBADQ,GACc,KAAKY,KADnB,CACRZ,iBADQ;AAEhB,UAAMa,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,aAAa,GAAGlB,8BAA8B,CAACiB,QAAD,CAApD;AACAhB,MAAAA,iBAAiB,CAACiB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKR,KADlB,CACGQ,KADH;AAAA,UAEGX,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGT,KAAD,IACJ,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGT,KAAD,IACJ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAiBH;;AAtCiC;;AA0CtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEiB,aAAa,IAAIM,QAAQ,CAACvB,iBAAiB,CAACiB,aAAD,CAAlB;AADR,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nimport CollectionPage from '../collection/collection.component';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n            updateCollections(collectionMap);\r\n            this.setState({ loading: false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`}\r\n                    render={(props) => \r\n                        <CollectionOverviewWithSpinner isLoading={loading} {...props} />\r\n                    }\r\n                />\r\n                <Route \r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => \r\n                        <CollectionPageWithSpinner isLoading={loading} {...props} /> \r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }   \r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}