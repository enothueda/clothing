{"ast":null,"code":"import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/h_eno/Desktop/clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","all","call","put","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACG,8BAAD,EAAiCO,QAAjC,CAAhC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,aAAD,CAAxB,CAAT;AAEH,GAND,CAME,OAAMC,KAAN,EAAa;AACX,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AAGJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,UAAU,CAACQ,eAAe,CAACU,uBAAjB,EAA0CT,qBAA1C,CAAhB;AACH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\r\n        yield put(fetchCollectionsSuccess(collectionMap));\r\n\r\n    } catch(error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n   \r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)])\r\n}"]},"metadata":{},"sourceType":"module"}