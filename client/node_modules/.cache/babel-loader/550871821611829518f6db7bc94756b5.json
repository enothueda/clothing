{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\h_eno\\\\Desktop\\\\clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport userActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  console.log('email', email);\n\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signingOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signingOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/h_eno/Desktop/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","userActionTypes","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","console","log","signInWithEmailAndPassword","isUserAuthenticated","signingOut","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\n\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions'\r\nimport userActionTypes from './user.types';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password }}){\r\n    console.log('email', email)\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch(error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch(error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signingOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    } catch(error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n    \r\n}\r\n\r\nexport function* signUp({ payload : { displayName, email, password }}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield put(signUpSuccess({ user, additionalData: { displayName } }))\r\n    } catch(error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: { user, additionalData }}) {\r\n    yield getSnapshotFromUserAuth(user, additionalData)\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signingOut)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession), \r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess)\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}