{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\h_eno\\\\Desktop\\\\clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport userActionTypes from './user.types';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmailAndPassword({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/h_eno/Desktop/clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","userActionTypes","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithEmailAndPassword","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAI;AAAA,iBACe,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CADrB;AAAA,UACOS,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACG,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,mBAAmB;AAAGW,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACO,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,0BAAV,CAAqC;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAArC,EAAmE;AACtE,MAAI;AAAA,kBACe,MAAMpB,IAAI,CAACiB,0BAAL,CAAgCE,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACOV,IADP,SACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACG,yBAAD,EAA4BQ,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACQ,kBAAkB;AAAGS,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAnB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACS,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACW,eAAe,CAACe,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACW,eAAe,CAACiB,mBAAjB,CAAhB;AACH;AAED,OAAO,UAAUC,SAAV,GAAsB;AACzB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\r\n\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions'\r\nimport userActionTypes from './user.types';\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(error) {\r\n        yield put(googleSignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmailAndPassword({payload: {email, password}}) {\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        const userRef = yield call(createUserProfileDocument, user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }))\r\n    } catch(error) {\r\n        yield put(emailSignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, )\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([call(onGoogleSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}